#!/bin/bash

#=================================================
# GENERIC START
#=================================================
# IMPORT GENERIC HELPERS
#=================================================

source _common.sh
source /usr/share/yunohost/helpers
# Load common variables for all scripts.
source _variables

#=================================================
# LOAD SETTINGS
#=================================================
ynh_script_progression --message="Load settings" --weight=3

app=$YNH_APP_INSTANCE_NAME

final_path=$(ynh_app_setting_get $app final_path)
frequency="$(ynh_app_setting_get $app frequency)"
encrypt=$(ynh_app_setting_get $app encrypt)
core_backup=$(ynh_app_setting_get $app core_backup)
apps_backup=$(ynh_app_setting_get $app apps_backup)
overwrite_cron=$(ynh_app_setting_get $app overwrite_cron)

#=================================================
# CHECK VERSION
#=================================================

upgrade_type=$(ynh_check_app_version_changed)

#=================================================
# ENSURE DOWNWARD COMPATIBILITY
#=================================================
ynh_script_progression --message="Ensure downward compatibility"

# If encrypt doesn't exist, create it
if [ -z "$encrypt" ]; then
	encrypt="$(grep "^encrypt=" "$final_path/Backup_list.conf" | cut -d= -f2)"
	if [ "$encrypt" = true ]; then
		encrypt=1
	else
		encrypt=0
	fi
	ynh_app_setting_set $app encrypt $encrypt
fi

# If core_backup doesn't exist, create it
if [ -z "$core_backup" ]; then
	core_backup="$(grep "^ynh_core_backup=" "$final_path/Backup_list.conf" | cut -d= -f2)"
	ynh_app_setting_set $app core_backup $core_backup
fi

# If apps_backup doesn't exist, create it
if [ -z "$apps_backup" ]; then
	apps_backup="$(grep --count --max-count=1 "^ynh_app_backup=" "$final_path/Backup_list.conf")"
	ynh_app_setting_set $app apps_backup $apps_backup
fi

# If overwrite_cron doesn't exist, create it
if [ -z "$overwrite_cron" ]; then
	overwrite_cron=1
	ynh_app_setting_set $app overwrite_cron $overwrite_cron
fi

#=================================================
# BACKUP BEFORE UPGRADE THEN ACTIVE TRAP
#=================================================
ynh_script_progression --message="Backup the app before upgrading" --weight=2

# Backup the current version of the app
ynh_backup_before_upgrade
ynh_clean_setup () {
	# restore it if the upgrade fails
	ynh_restore_upgradebackup
}
# Exit if an error occurs during the execution of the script
ynh_abort_if_errors

#=================================================
# STANDARD UPGRADE STEPS
#=================================================
# DOWNLOAD, CHECK AND UNPACK SOURCE
#=================================================

if [ "$upgrade_type" == "UPGRADE_APP" ]
then
	ynh_script_progression --message="Download, check and unpack source" --weight=2
	# Download, check integrity, uncompress and patch the source from app.src
	ynh_setup_source "$final_path"
fi

#=================================================
# UPGRADE DEPENDENCIES
#=================================================
ynh_script_progression --message="Upgrade dependencies" --weight=8

ynh_install_app_dependencies $app_depencencies

#=================================================
# SPECIFIC UPGRADE
#=================================================
# STRETCH COMPATIBILITY
#=================================================

if is_stretch
then
	ynh_replace_string "yunohost backup create --ignore-apps" "yunohost backup create" "$final_path/archivist.sh"
	ynh_replace_string "yunohost backup create --ignore-system" "yunohost backup create" "$final_path/archivist.sh"
fi

#=================================================
# UPDATE THE CRON FILE
#=================================================
ynh_script_progression --message="Update the cron file"

# Overwrite the cron file only if it's allowed
if [ $overwrite_cron -eq 1 ]
then
	# Verify the checksum and backup the file if it's different
	ynh_backup_if_checksum_is_different "/etc/cron.d/$app"

	cp ../conf/cron /etc/cron.d/$app
	ynh_replace_string "__FINALPATH__" "$final_path" /etc/cron.d/$app
	ynh_replace_string "__APP__" "$app" /etc/cron.d/$app
	if [ "$frequency" = "Daily" ]; then
		cron_freq="0 2 * * *"
		run_freq="every day"
	elif [ "$frequency" = "Each 3 days" ]; then
		cron_freq="0 2 */3 * *"
		run_freq="each 3 days"
	elif [ "$frequency" = "Weekly" ]; then
		cron_freq="0 2 * * 0"
		run_freq="once a week on sunday"
	elif [ "$frequency" = "Biweekly" ]; then
		cron_freq="0 2 * * 0/2"
		run_freq="one sunday out of two"
	else	# Monthly
		cron_freq="0 2 1 * *"
		run_freq="once a month on the first sunday"
	fi
	ynh_replace_string "__FREQUENCY__" "$cron_freq" /etc/cron.d/$app

	# Recalculate and store the config file checksum into the app settings
	ynh_store_file_checksum "/etc/cron.d/$app"
fi

#=================================================
# SETUP LOGROTATE
#=================================================
ynh_script_progression --message="Reconfigure logrotate"

# Use logrotate to manage app-specific logfile(s)
ynh_use_logrotate --non-append

#=================================================
# GENERIC FINALIZATION
#=================================================
# SECURE FILES AND DIRECTORIES
#=================================================

# Set permissions on app files
chown -R root: $final_path

#=================================================
# SEND A README FOR THE ADMIN
#=================================================

# Get main domain and buid the url of the admin panel of the app.
admin_panel="https://$(grep portal_domain /etc/ssowat/conf.json | cut -d'"' -f4)/yunohost/admin/#/apps/$app"

message="Archivist is going to run $run_freq.
If you want to change the frequency, have a look to the file /etc/cron.d/$app.

Please read the documentation (https://github.com/maniackcrudelis/archivist/blob/master/Configuration.md) about the configuration of archivist for more information.

You can configure this app easily by using the experimental config-panel feature: $admin_panel/config-panel.
You can also find some specific actions for this app by using the experimental action feature: $admin_panel/actions.

If you're facing an issue or want to improve this app, please open a new issue in this project: https://github.com/YunoHost-Apps/archivist_ynh"

ynh_send_readme_to_admin --app_message="$message" --recipients="root" --type="upgrade"

#=================================================
# END OF SCRIPT
#=================================================

ynh_script_progression --message="Upgrade completed" --last
