#!/bin/bash

#=================================================
# GENERIC START
#=================================================
# IMPORT GENERIC HELPERS
#=================================================

source _common.sh
source /usr/share/yunohost/helpers
# Load common variables for all scripts.
source _variables

#=================================================
# MANAGE SCRIPT FAILURE
#=================================================

# Exit if an error occurs during the execution of the script
ynh_abort_if_errors

#=================================================
# RETRIEVE ARGUMENTS FROM THE MANIFEST
#=================================================

encrypt=$YNH_APP_ARG_ENCRYPT
ynh_print_OFF; encryption_pwd=$YNH_APP_ARG_ENCRYPTION_PWD; ynh_print_ON
core_backup=$YNH_APP_ARG_CORE_BACKUP
apps_backup=$YNH_APP_ARG_APPS_BACKUP
frequency="$YNH_APP_ARG_FREQUENCY"

app=$YNH_APP_INSTANCE_NAME

#=================================================
# CHECK IF THE APP CAN BE INSTALLED WITH THESE ARGS
#=================================================

final_path=/opt/yunohost/$app
test ! -e "$final_path" || ynh_die "This path already contains a folder"

if [ $encrypt -eq 1 ]; then
	ynh_print_OFF
	test -n "$encryption_pwd" || ynh_die "encryption_pwd can't be empty if you choose to enable encryption."
	ynh_print_ON
fi

#=================================================
# STORE SETTINGS FROM MANIFEST
#=================================================

ynh_app_setting_set $app frequency "$frequency"
ynh_app_setting_set $app encrypt "$encrypt"
ynh_app_setting_set $app core_backup "$core_backup"
ynh_app_setting_set $app apps_backup "$apps_backup"
ynh_app_setting_set $app overwrite_cron "1"

#=================================================
# STANDARD MODIFICATIONS
#=================================================
# INSTALL DEPENDENCIES
#=================================================

# Valid the fucking debconf message
# To find this, install the package, install also debconf-utils
# Then use `debconf-get-selections | grep package`
echo "encfs encfs/security-information boolean true" | debconf-set-selections
ynh_install_app_dependencies $app_depencencies

#=================================================
# DOWNLOAD, CHECK AND UNPACK SOURCE
#=================================================

ynh_app_setting_set $app final_path $final_path
# Download, check integrity, uncompress and patch the source from app.src
ynh_setup_source "$final_path"

#=================================================
# SPECIFIC SETUP
#=================================================
# CREATE THE BACKUP DIRECTORY
#=================================================

backup_dir="/home/yunohost.app/${app}/backup"
enc_backup_dir="/home/yunohost.app/${app}/encrypted_backup"
mkdir -p "$backup_dir"

#=================================================
# CONFIGURE ARCHIVIST
#=================================================

config_file="$final_path/Backup_list.conf"
cp "$final_path/Backup_list.conf.default" "$config_file"

ynh_replace_string "^backup_dir=.*" "backup_dir=$backup_dir" "$config_file"
ynh_replace_string "^enc_backup_dir=.*" "enc_backup_dir=$enc_backup_dir" "$config_file"

if [ $encrypt -eq 1 ]
then
	encrypt=true

	passkey="$final_path/passkey"
	ynh_print_OFF; echo "$encryption_pwd" > "$passkey"; ynh_print_ON
	chmod 400 "$passkey"
else
	encrypt=false
	passkey=na
fi
ynh_replace_string "^encrypt=.*" "encrypt=$encrypt" "$config_file"
ynh_replace_string "^cryptpass=.*" "cryptpass=$passkey" "$config_file"

if [ $core_backup -eq 1 ]
then
	core_backup=true
else
	core_backup=false
fi
ynh_replace_string "^ynh_core_backup=.*" "ynh_core_backup=$core_backup" "$config_file"

if [ $apps_backup -eq 1 ]
then
	# Add all current applications to the backup
	while read backup_app
	do
		ynh_replace_string "^ynh_app_backup=$" "ynh_app_backup=$backup_app\n&" "$config_file"
	done <<< "$(yunohost app list -i | grep id: | sed 's/.*id: //')"
fi

# Calculate and store the config file checksum into the app settings
ynh_store_file_checksum "$config_file"

#=================================================
# STRETCH COMPATIBILITY
#=================================================

if is_stretch
then
	ynh_replace_string "yunohost backup create --ignore-apps" "yunohost backup create" "$final_path/archivist.sh"
	ynh_replace_string "yunohost backup create --ignore-system" "yunohost backup create" "$final_path/archivist.sh"
fi

#=================================================
# SET THE CRON FILE
#=================================================

cp ../conf/cron /etc/cron.d/$app
ynh_replace_string "__FINALPATH__" "$final_path" /etc/cron.d/$app
ynh_replace_string "__APP__" "$app" /etc/cron.d/$app
if [ "$frequency" = "Daily" ]; then
	cron_freq="0 2 * * *"
	run_freq="every day"
elif [ "$frequency" = "Each 3 days" ]; then
	cron_freq="0 2 */3 * *"
	run_freq="each 3 days"
elif [ "$frequency" = "Weekly" ]; then
	cron_freq="0 2 * * 0"
	run_freq="once a week on sunday"
elif [ "$frequency" = "Biweekly" ]; then
	cron_freq="0 2 * * 0/2"
	run_freq="one sunday out of two"
else	# Monthly
	cron_freq="0 2 1 * *"
	run_freq="once a month on the first sunday"
fi
ynh_replace_string "__FREQUENCY__" "$cron_freq" /etc/cron.d/$app

# Calculate and store the config file checksum into the app settings
ynh_store_file_checksum "/etc/cron.d/$app"

#=================================================
# GENERIC FINALIZATION
#=================================================
# SECURE FILES AND DIRECTORIES
#=================================================

# Set permissions to app files
chown -R root: $final_path

#=================================================
# SETUP LOGROTATE
#=================================================

mkdir -p /var/log/$app
# Use logrotate to manage application logfile(s)
ynh_use_logrotate

#=================================================
# PRINT INFORMATION
#=================================================

Informations="To add recipients or to modify the files or apps to backup,
please have a look to the config file $config_file"
ynh_print_info "
$Informations" >&2

#=================================================
# SEND A README FOR THE ADMIN
#=================================================

ynh_print_OFF
if [ "$encrypt" = "true" ]
then
	encrypt_message="Your password for encryption is '$encryption_pwd'

"
else
	encrypt_message=""
fi

# Get main domain and buid the url of the admin panel of the app.
admin_panel="https://$(grep portal_domain /etc/ssowat/conf.json | cut -d'"' -f4)/yunohost/admin/#/apps/$app"

message="${encrypt_message}Archivist is going to run $run_freq.
If you want to change the frequency, have a look to the file /etc/cron.d/$app.

$Informations
Please read the documentation (https://github.com/maniackcrudelis/archivist/blob/master/Configuration.md) about the configuration of archivist for more information.

You can configure this app easily by using the experimental [config-panel feature]($admin_panel/config-panel).
You can also find some specific actions for this app by using the experimental [action feature]($admin_panel/actions).

If you're facing an issue or want to improve this app, please open a new issue in this project: https://github.com/YunoHost-Apps/archivist_ynh"

ynh_send_readme_to_admin --app_message="$message" --recipients="root" --type="install"
ynh_print_ON
